{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\WhatsApp\\\\whatsapp-clone\\\\src\\\\Chat.js\";\nimport React from 'react';\nimport './Chat.css';\nimport { Avatar, IconButton, Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport MoreVert from \"@material-ui/icons/MoreVert\";\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useParams } from \"react-router-dom\";\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nimport firebase from 'firebase';\n\nfunction Chat() {\n  var _messages, _messages$timestamp;\n\n  const [input, setInput] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (roomId) {\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n      db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', \"asc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log(\"You Typed >>>>\", input);\n    db.collection('rooms').doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: `https://avatars.dicebear.com/api/human/${seed}.svg`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"last seen\", \" \", new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toUTCString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MoreVert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, messages.map(message => {\n    var _message$timestamp;\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: `chat__message ${true && 'chat__reciever'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, message.name), message.message, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: \"Type a message\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: sendMessage,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Send a message\")), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/WhatsApp/whatsapp-clone/src/Chat.js"],"names":["React","Avatar","IconButton","Button","useEffect","useState","SearchOutlined","AttachFile","MoreVert","InsertEmoticonIcon","MicIcon","SendIcon","useParams","db","useStateValue","firebase","Chat","input","setInput","seed","setSeed","roomId","roomName","setRoomName","messages","setMessages","user","dispatch","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","e","preventDefault","console","log","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Chat.css';\r\nimport { Avatar, IconButton, Button } from \"@material-ui/core\";\r\nimport { useEffect , useState } from \"react\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction Chat() {\r\n    const [input,setInput] =useState(\"\");\r\n    const [seed,setSeed] =useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName,setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            db.collection('rooms')\r\n            .doc(roomId)\r\n            .onSnapshot((snapshot) =>\r\n                setRoomName(snapshot.data().name));\r\n            \r\n            db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .orderBy('timestamp',\"asc\")\r\n            .onSnapshot((snapshot) =>\r\n                    setMessages(snapshot.docs.map(doc => doc.data()))\r\n            );\r\n        }\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"You Typed >>>>\",input);\r\n        db.collection('rooms')\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar  src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>\r\n                        last seen{\" \"}\r\n                        {\r\n                            new Date(\r\n                                messages[messages.length-1]?.timestamp?.toDate()\r\n                            ).toUTCString()\r\n                        }\r\n                    </p>\r\n                    \r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat__message ${true && 'chat__reciever'}`}>\r\n                    <span className=\"chat__name\">\r\n                        {message.name}\r\n                    </span>\r\n                    {message.message}\r\n                    <span className=\"chat__timestamp\">\r\n                        {new Date(message.timestamp?.toDate())\r\n                        .toUTCString()}\r\n                    </span>\r\n                    </p>\r\n                ))\r\n                }\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message\" type='text'/>\r\n                    <Button onClick={sendMessage}\r\n                    type=\"submit\">\r\n                        Send a message\r\n                    </Button>\r\n                </form>\r\n                <IconButton>\r\n                <SendIcon />\r\n                </IconButton>\r\n                <IconButton></IconButton>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}